'''
The Secondary and Tertiary Structures of DNA

Problem

In DNA strings, symbols 'A' and 'T' are complements of each other, as are 'C' and 'G'.

The reverse complement of a DNA string s is the string sc formed by reversing the symbols of s,
then taking the complement of each symbol (e.g., the reverse complement of "GTCA" is "TGAC").

Given: A DNA string s of length at most 1000 bp.

Return: The reverse complement sc of s.

Sample Dataset: AAAACCCGGT
Sample Output: ACCGGGTTTT
'''

s = 'TTTCTCGTGACAACTGCATATACTTAGTAATATCAGAAGCCTCGTTGGGTGCGACTACGCACTGAAACAGTCCTCCAGGCCAGAACGCGAACTCTCCTCTCTGAGTGCAGTAATCGTCGCCACCGTAAAGTTCCCCGTCGCCCTTTGAAGCTGATGCGAAACAGGGTAGCTTGCATATCCTCATATGAGCGCGCCGAACCAACTGCCCGCTAACGAGCGAGAGACCCGTTGTGCGGTCCAATATGACAACGATACGCGGTTCGTGGTCCACGGAGCCCATAAATATGGAACCACCGGTATTCATTAACCCGTTTTCTCGAGCCCCAGCGCCCCTAAGCTCTGTTTGTGACAAATCCTATTCGAACGAGATGTAAACGTTACAGGACATGCCATCGTCCCCTCAAAGTCGTGTCCACAATGAGTATGGCGAATCCGGTGATCCATAACACGACGATAGGTCCGCCGAATTATCATCCTAAAAAGTATCCAGCAGAACAATAGCAAGACACTTCGTTTCCCCTGTATGCCTCGTTCTACAGCATCAAGCCCAGGGTCGCATCTGGTCCCGCCTATGAGGGCACTGCCTTTTATAATCATTGTGAATGGTTGCATTAAGGAGCGCTTGGGTACGCTTTGGCCTTTGATGTGCGGCTTGCTCGGTCGGGGGGTGGGCCGCTCATCCGTAACTGGGTTAAGAAAGTCGGGGCCCAGCAGCCGTCTCCAAGTTCAGGTTATTGGCGATGCGCTGACGCGAATCGTCAGATGACATGTTCATTCGTCCTCAGTGATATCAGACACGGAGTAGGTACGTGACACAATTGCGTTAATGGGCCACATGGAGTGGTCGAGAATCACCTCGCACCTCCGCTATCG'

def reverse_complementary(s):
    
    s_rev = s[::-1]
    s_rev_c = ''

    for nt in s_rev:
        if nt == 'A':
            s_rev_c += 'T'
        elif nt == 'T':
            s_rev_c += 'A'
        elif nt == 'C':
            s_rev_c += 'G'
        elif nt == 'G':
            s_rev_c += 'C'

    return s_rev_c

rev_compl = reverse_complementary(s)

print(rev_compl)












